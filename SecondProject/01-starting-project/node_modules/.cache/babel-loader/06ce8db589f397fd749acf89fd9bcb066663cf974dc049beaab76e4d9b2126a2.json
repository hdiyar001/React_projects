{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\49179\\\\Desktop\\\\First-React-Projekt\\\\SecondProject\\\\01-starting-project\\\\src\\\\Components\\\\InvestmentTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport InvestmentTableItem from \"./InvestmentTableBodyItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InvestmentTable(props) {\n  _s();\n  const [yearlyData, setYearlyData] = useState([]);\n  useEffect(() => {\n    const calculateHandler = userInput => {\n      // Your calculation logic here...\n      let currentSavings = +userInput.currentSavings;\n      const yearlyContribution = +userInput.yearlySavings;\n      const expectedReturn = +userInput.expectedInterest / 100;\n      const duration = +userInput.investmentDuration;\n      const calculatedData = [];\n      for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        calculatedData.push({\n          year: i + 1,\n          yeartotalInterest: duration * yearlyContribution,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution\n        });\n      }\n      setYearlyData(calculatedData);\n    };\n    calculateHandler(props.data);\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), yearlyData.map((obj, io) => {\n      return /*#__PURE__*/_jsxDEV(InvestmentTableItem, {\n        redirctedobjs: obj\n      }, io, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(InvestmentTable, \"4/8f3kxcL55eVB3FG9NiWJTdgsY=\");\n_c = InvestmentTable;\nvar _c;\n$RefreshReg$(_c, \"InvestmentTable\");","map":{"version":3,"names":["React","useState","useEffect","InvestmentTableItem","jsxDEV","_jsxDEV","InvestmentTable","props","_s","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","yearlySavings","expectedReturn","expectedInterest","duration","investmentDuration","calculatedData","i","yearlyInterest","push","year","yeartotalInterest","savingsEndOfYear","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","io","redirctedobjs","_c","$RefreshReg$"],"sources":["C:/Users/49179/Desktop/First-React-Projekt/SecondProject/01-starting-project/src/Components/InvestmentTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport InvestmentTableItem from \"./InvestmentTableBodyItems\";\r\n\r\nexport default function InvestmentTable(props) {\r\n  const [yearlyData, setYearlyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const calculateHandler = (userInput) => {\r\n      // Your calculation logic here...\r\n      let currentSavings = +userInput.currentSavings;\r\n      const yearlyContribution = +userInput.yearlySavings;\r\n      const expectedReturn = +userInput.expectedInterest / 100;\r\n      const duration = +userInput.investmentDuration;\r\n\r\n      const calculatedData = [];\r\n\r\n      for (let i = 0; i < duration; i++) {\r\n        const yearlyInterest = currentSavings * expectedReturn;\r\n        currentSavings += yearlyInterest + yearlyContribution;\r\n        calculatedData.push({\r\n          year: i + 1,\r\n          yeartotalInterest: duration * yearlyContribution,\r\n          yearlyInterest: yearlyInterest,\r\n          savingsEndOfYear: currentSavings,\r\n          yearlyContribution: yearlyContribution,\r\n        });\r\n      }\r\n\r\n      setYearlyData(calculatedData);\r\n    };\r\n\r\n    calculateHandler(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <table className=\"result\">\r\n      <thead>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Total Savings</th>\r\n          <th>Interest (Year)</th>\r\n          <th>Total Interest</th>\r\n          <th>Invested Capital</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      {yearlyData.map((obj, io) => {\r\n        return <InvestmentTableItem key={io} redirctedobjs={obj} />;\r\n      })}\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}