{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\49179\\\\Desktop\\\\First-React-Projekt\\\\SecondProject\\\\01-starting-project\\\\src\\\\Components\\\\InvestmentTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InvestmentTableItem from \"./InvestmentTableBodyItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InvestmentTable(props) {\n  _s();\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput.currentSavings; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput.yearlySavings; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.expectedInterest / 100;\n    const duration = +userInput.investmentDuration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      setYearlyData(prev => {\n        return {\n          ...prev,\n          [i + 1]: {\n            year: i + 1,\n            contributions: duration * yearlyContribution,\n            interest: yearlyInterest,\n            savings: currentSavings,\n            yearlyContribution: yearlyContribution\n          }\n        };\n      });\n      // yearlyData.push({\n      //   // feel free to change the shape of the data pushed to the array!\n      //   year: i + 1,\n      //   yeartotalInterest: duration * yearlyContribution,\n      //   yearlyInterest: yearlyInterest,\n      //   savingsEndOfYear: currentSavings,\n      //   yearlyContribution: yearlyContribution,\n      // });\n    }\n  };\n\n  calculateHandler(props);\n  // changeGivenData(yearlyData);\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), yearlyData.map(obj => {\n      /*#__PURE__*/_jsxDEV(InvestmentTableItem, {\n        redirctedobjs: obj\n      }, obj.year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(InvestmentTable, \"L2hTGYim4KbKSMBTHo5ostNJKu4=\");\n_c = InvestmentTable;\nvar _c;\n$RefreshReg$(_c, \"InvestmentTable\");","map":{"version":3,"names":["React","useState","InvestmentTableItem","jsxDEV","_jsxDEV","InvestmentTable","props","_s","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","yearlySavings","expectedReturn","expectedInterest","duration","investmentDuration","i","yearlyInterest","prev","year","contributions","interest","savings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","redirctedobjs","_c","$RefreshReg$"],"sources":["C:/Users/49179/Desktop/First-React-Projekt/SecondProject/01-starting-project/src/Components/InvestmentTable.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport InvestmentTableItem from \"./InvestmentTableBodyItems\";\r\n\r\nexport default function InvestmentTable(props) {\r\n  const [yearlyData, setYearlyData] = useState([]);\r\n\r\n  const calculateHandler = (userInput) => {\r\n    // Should be triggered when form is submitted\r\n    // You might not directly want to bind it to the submit event on the form though...\r\n\r\n    let currentSavings = +userInput.currentSavings; // feel free to change the shape of this input object!\r\n    const yearlyContribution = +userInput.yearlySavings; // as mentioned: feel free to change the shape...\r\n    const expectedReturn = +userInput.expectedInterest / 100;\r\n    const duration = +userInput.investmentDuration;\r\n\r\n    // The below code calculates yearly results (total savings, interest etc)\r\n    for (let i = 0; i < duration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlyContribution;\r\n\r\n      setYearlyData((prev) => {\r\n        return {\r\n          ...prev,\r\n          [i + 1]: {\r\n            year: i + 1,\r\n            contributions: duration * yearlyContribution,\r\n            interest: yearlyInterest,\r\n            savings: currentSavings,\r\n            yearlyContribution: yearlyContribution,\r\n          },\r\n        };\r\n      });\r\n      // yearlyData.push({\r\n      //   // feel free to change the shape of the data pushed to the array!\r\n      //   year: i + 1,\r\n      //   yeartotalInterest: duration * yearlyContribution,\r\n      //   yearlyInterest: yearlyInterest,\r\n      //   savingsEndOfYear: currentSavings,\r\n      //   yearlyContribution: yearlyContribution,\r\n      // });\r\n    }\r\n  };\r\n  calculateHandler(props);\r\n  // changeGivenData(yearlyData);\r\n\r\n  return (\r\n    <table className=\"result\">\r\n      <thead>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Total Savings</th>\r\n          <th>Interest (Year)</th>\r\n          <th>Total Interest</th>\r\n          <th>Invested Capital</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      {yearlyData.map((obj) => {\r\n        <InvestmentTableItem key={obj.year} redirctedobjs={obj} />;\r\n      })}\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}